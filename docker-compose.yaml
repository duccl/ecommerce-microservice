version: "3.0"
services:
  gateway:
    build:
        dockerfile: ./src/ApiGatways/OcelotApiGatway/Dockerfile
        context: .
    container_name: "ocelot-api-gateway"
    restart: always
    ports:
      - "80:80" 
  rabbitmq_broker:
    image: rabbitmq:3-management-alpine
    container_name: "rabbitmq-broker"
    restart: always
    ports:
      - "15672:15672"
      - "5672:5672"
  catalogdb:
    image: mongo
    restart: always
    container_name: "catalog-mongo"
    expose:
      - 27017
  catalog:
    build:
        dockerfile: ./src/Catalog/Microservices.Catalog.Api/Dockerfile
        context: .
    container_name: "catalog-app"
    depends_on:
      - catalogdb
    expose:
      - 80
    # ports:
    #   - "8080:80" 
  basketdb:
    image: redis
    restart: always
    container_name: "basket-redis"
    expose:
      - 6379
  basket:
    build: 
        dockerfile: ./src/Basket/Microservices.Basket.Api/Dockerfile
        context: .
    container_name: "basket-app"
    depends_on:
      - basketdb
      - rabbitmq_broker
    expose:
      - 80
    # ports:
    #   - "9090:80" 

  discountdb:
    image: postgres
    restart: always
    environment: 
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: superpassword

  discount:
    build: 
        dockerfile: ./src/Discount/Microservices.Discount.Api/Dockerfile
        context: .
    container_name: "discount-app"
    depends_on:
      - discountdb
    expose:
      - 80
    # ports:
    #   - "9091:80" 

  discount-grpc:
    build: 
        dockerfile: ./src/Discount/Microservices.Discount.Grpc/Dockerfile
        context: .
    container_name: "discount-app-grpc"
    depends_on:
      - discountdb
    expose:
      - 80
    # ports:
    #   - "9093:80" 

  orderdb:
    image: mcr.microsoft.com/mssql/server
    restart: always
    container_name: "order-database"
    environment: 
      ACCEPT_EULA: Y
      SA_PASSWORD: adminA#15
    expose:
      - 1433
    ports:
      - "1433:1433"
  orderapp:
    build:
        dockerfile: ./src/Ordering/Microservices.Ordering.Api/Dockerfile
        context: .
    container_name: "order-app"
    restart: always
    depends_on:
      - orderdb
    expose:
      - 80
    ports:
      - "9095:80" 
    
  order_consumers:
    build:
        dockerfile: ./src/Ordering/Microservices.Ordering.Consumer/Dockerfile
        context: .
    container_name: "order-consumers"
    restart: always
    depends_on:
      - orderdb
      - rabbitmq_broker
volumes:
  postgres_data: